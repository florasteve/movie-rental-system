name: Nightly DB reports

on:
  schedule:
    - cron: '30 06 * * *'   # 06:30 UTC (~02:30 ET while on EDT)
  workflow_dispatch:

jobs:
  build-and-export:
    runs-on: ubuntu-latest
    # Make the secret available as an env var for all steps
    env:
      SA_PASSWORD: ${{ secrets.SA_PASSWORD }}

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: Y
          # The service itself still needs the password env; using secrets here is valid in Actions
          SA_PASSWORD: ${{ secrets.SA_PASSWORD }}
        ports:
          - 1433:1433
        options: >-
          # Use $SA_PASSWORD (provided via env above) to avoid lint complaints
          --health-cmd="/opt/mssql-tools18/bin/sqlcmd -C -S localhost -U SA -P $SA_PASSWORD -Q 'SELECT 1' || exit 1"
          --health-interval=10s --health-timeout=5s --health-retries=30

    steps:
      - uses: actions/checkout@v4

      - name: Install sqlcmd (mssql-tools18)
        run: |
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y curl gnupg
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18 unixodbc-dev

      - name: Wait for SQL
        run: |
          for i in {1..30}; do
            /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U SA -P "$SA_PASSWORD" -Q "SELECT 1" && break
            sleep 5
          done

      - name: Apply schema & seed (local paths)
        run: |
          /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U SA -P "$SA_PASSWORD" -i scripts/apply_local.sql

      - name: Export reports (tolerate missing views)
        run: |
          /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U SA -P "$SA_PASSWORD" -d MovieRentalDB \
            -Q "SET NOCOUNT ON; IF OBJECT_ID('dbo.vwOverdueRentals','V') IS NOT NULL SELECT * FROM dbo.vwOverdueRentals;" \
            -s "," -W -w 0 -o overdue_rentals.csv || true
          [ -s overdue_rentals.csv ] || : > overdue_rentals.csv

          /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U SA -P "$SA_PASSWORD" -d MovieRentalDB \
            -Q "SET NOCOUNT ON; IF OBJECT_ID('dbo.vwLowInventory','V') IS NOT NULL SELECT * FROM dbo.vwLowInventory;" \
            -s "," -W -w 0 -o low_inventory.csv || true
          [ -s low_inventory.csv ] || : > low_inventory.csv

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            overdue_rentals.csv
            low_inventory.csv
